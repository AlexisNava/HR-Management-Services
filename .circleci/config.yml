version: 2.1

jobs:
  install_dependencies:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: "Install Dependencies"
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  run_tests:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Install Docker Compose"
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: "Docker Compose Up"
          command: docker-compose up -d
      - run:
          name: "Docker Compose ps"
          command: docker-compose ps
      - run:
          name: "Prisma Logs"
          command: |
            docker logs project_prisma_1
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: "Prisma Deploy"
          command: npx prisma deploy
      - run:
          name: "Run tests"
          command: npm test

  run_linter:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: "Run Linter"
          command: npm run lint

  publish_docker_image:
    docker:
      - image: docker:19.03.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
          docker_layer_caching: true
      - run:
          name: "Docker Login"
          command: docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - run:
          name: "Docker Build"
          command: docker build -t $DOCKER_REPONAME .
      - run:
          name: "Tag Image"
          command: docker tag $DOCKER_REPONAME $DOCKER_USERNAME/$DOCKER_REPONAME
      - run:
          name: "Publish Image"
          command: docker push $DOCKER_USERNAME/$DOCKER_REPONAME

workflows:
  version: 2

  development:
    jobs:
      - install_dependencies:
          filters:
            branches:
              ignore: master
      - run_tests:
          requires:
            - install_dependencies
          filters:
            branches:
              ignore: master
      - run_linter:
          requires:
            - install_dependencies
          filters:
            branches:
              ignore: master

  production:
    jobs:
      - install_dependencies:
          filters:
            branches:
              only: master
      - run_tests:
          requires:
            - install_dependencies
          filters:
            branches:
              only: master
      - run_linter:
          requires:
            - install_dependencies
          filters:
            branches:
              only: master
      - publish_docker_image:
          requires:
            - run_tests
            - run_linter
          filters:
            branches:
              only: master
